---
import type { AstroIconifyComponent } from "virtual:icons";
import RiFacebookFill from "virtual:icons/ri/facebook-fill";
import RiGithubFill from "virtual:icons/ri/github-fill";
import RiLinkedinFill from "virtual:icons/ri/linkedin-fill";
import RiMenuFill from "virtual:icons/ri/menu-fill";
import RiSunLine from "virtual:icons/ri/sun-line";

type Props = {
  title?: string;
  description?: string;
  robots?: string;
  og?: {
    url?: string;
    type?: string;
    site_name?: string;
    title?: string;
    description?: string;
    image?: string;
  };
  twitter?: {
    card?: string;
    site?: string;
    title?: string;
    description?: string;
    image?: string;
  };
  mainClass?: string;
  parentClass?: string;
};
let { title, description, og, twitter, robots, mainClass, parentClass } =
  Astro.props;
robots ??= "index, follow";
title ??= "Home";
description ??= "Jamstack Web Developer";

const darkThemeScript =
  '!((e,t,o,n)=>{const d=()=>"undefined"!=typeof localStorage&&localStorage.getItem(e)?localStorage.getItem(e):window.matchMedia(`(prefers-color-scheme: ${o})`).matches?o:n,c=t=>{t===n?document.documentElement.classList.remove(o):document.documentElement.classList.add(o),window.localStorage.setItem(e,t)};window.addEventListener("DOMContentLoaded",(()=>{document.getElementById(t)?.addEventListener("click",(e=>{e.preventDefault(),c(d()===o?n:o)}))})),c(d())})("arisris-theme-appearance", "toggle-dark", "dark", "light");';
type SocialLinks = [AstroIconifyComponent, string, string][];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content={robots} />
    <meta
      name="google-site-verification"
      content="HqRlPHb6rKQHLdM0ifiL0wHexR1qaUVFr_5f0dr0bKI"
    />
    {
      og &&
        Object.entries(og).map(
          ([name, content]) =>
            name && content && <meta name={`og:${name}`} content={content} />
        )
    }
    {
      twitter &&
        Object.entries(twitter).map(
          ([name, content]) =>
            name &&
            content && <meta name={`twitter:${name}`} content={content} />
        )
    }
    <title>{`${title} | Jamstack Web Developer`}</title>
    <link rel="canonical" href={Astro.url} />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/static/icon/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/static/icon/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/static/icon/favicon-16x16.png"
    />
    <link rel="manifest" href="/static/icon/site.webmanifest" />
    <slot name="head" />
    <script is:inline set:html={darkThemeScript} />
  </head>
  <body
    class="bg-white dark:bg-neutral-700 text-neutral-700 dark:text-neutral-100"
  >
    <section class="flex flex-col min-h-screen">
      <header class="relative shadow">
        <nav
          class="flex flex-col md:items-center md:flex-row md:justify-between gap-2 max-w-screen-md mx-auto p-2"
        >
          <div class="flex justify-between items-center">
            <a href="/" class="flex flex-col p-2">
              <strong class="text-2xl underline underline-dashed"
                >{"<arisris />"}</strong
              >
              <span class="text-[.6rem] italic ml-auto -mt-1"
                >Personal Sites</span
              >
            </a>
            <button
              id="toggle-dark"
              type="button"
              title="Toggle Theme"
              class="mr-auto ml-4"
            >
              <RiSunLine />
            </button>
            <label
              for="toggle-menu"
              role="button"
              class="md:hidden select-none p-2"
            >
              <RiMenuFill />
            </label>
          </div>
          <input id="toggle-menu" type="checkbox" class="hidden peer/menu" />
          <div
            class="hidden flex-col md:flex md:flex-row md:items-center gap-x-2 md:rounded-full md:ring-1 md:dark:ring-neutral-600 md:ring-neutral-200 md:px-6 peer-checked/menu:flex"
          >
            {
              [
                ["/pages/services", "Services"],
                ["/pages/projects", "Projects"],
                ["/posts", "Blog"],
                ["/tools", "Tools"]
              ].map(([href, title]) => (
                <a
                  href={href}
                  title={title}
                  class="block p-2 hover:bg-neutral-200 dark:hover:bg-neutral-600"
                >
                  {title}
                </a>
              ))
            }
          </div>
        </nav>
      </header>
      <main class:list={["flex-auto", mainClass]}>
        <div class:list={["p-2 max-w-screen-md mx-auto", parentClass]}>
          <slot />
        </div>
      </main>
      <footer>
        <div
          class="flex items-center justify-between max-w-screen-md mx-auto p-2 text-sm"
        >
          <div>
            <span>&copy; {new Date().getFullYear()}</span>
            <a
              href="https://github.com/arisris/arisris.com"
              class="hover:underline">Aris Riswanto</a
            >
          </div>
          <div class="flex items-center gap-x-4">
            {
              (
                [
                  [RiGithubFill, "https://github.com/arisris", "Github"],
                  [
                    RiLinkedinFill,
                    "https://linkedin.com/in/arisris",
                    "LinkedIn"
                  ],
                  [
                    RiFacebookFill,
                    "https://facebook.com/arisfungratis",
                    "Facebook"
                  ]
                ] as SocialLinks
              ).map(([Ri, href, title]) => (
                <a href={href} title={title} class="hover:underline">
                  <Ri />
                </a>
              ))
            }
          </div>
        </div>
      </footer>
    </section>
  </body>
</html>
